apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
ext.anko_version='0.10.5'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.systemcontrol.corpsele.systemcontrol"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
        ndk{
//            abiFilters "arm64-v8a", "armeabi", "armeabi-v7a","mips","mips64", "x86", "x86_64"
            abiFilters "x86_64", "arm64-v8a"
//            abiFilters "armeabi", "armeabi-v7a", "x86", "x86_64"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
//        sourceCompatibility = 1.8
//        targetCompatibility = 1.8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/NOTICE' // will not include NOTICE file
        exclude 'META-INF/LICENSE' // will not include LICENSE file
        exclude 'META-INF/INDEX.LIST' // will not include INDEX.LIST file
        exclude 'META-INF/androidx.customview_customview.version'
        exclude 'META-INF/androidx.drawerlayout_drawerlayout.version'
        exclude 'META-INF/androidx.interpolator_interpolator.version'
        exclude 'META-INF/androidx.appcompat_appcompat.version'
        exclude 'META-INF/androidx.loader_loader.version'
        exclude 'META-INF/androidx.viewpager_viewpager.version'
        exclude 'META-INF/androidx.cursoradapter_cursoradapter.version'
        exclude 'META-INF/androidx.versionedparcelable_versionedparcelable.version'
        exclude 'META-INF/androidx.fragment_fragment.version'
        exclude 'META-INF/androidx.vectordrawable_vectordrawable.version'
        exclude 'META-INF/androidx.core_core.version'
        exclude 'META-INF/androidx.vectordrawable_vectordrawable-animated.version'
        exclude "lib/armeabi-v7a/libijkplayer.so"
        exclude "lib/armeabi-v7a/libijkffmpeg.so"
        exclude "lib/x86/libijkplayer.so"
        exclude "lib/x86/libijkffmpeg.so"
        exclude "lib/x86/libijksdl.so"
        exclude "lib/armeabi/libijkplayer.so"
        exclude "lib/armeabi/libijksdl.so"
        exclude "lib/armeabi/libijkffmpeg.so"
        exclude "lib/armeabi-v7a/libijksdl.so"
//        exclude "lib/x86_64/libijksdl.so"
//        exclude "lib/x86_64/libijkplayer.so"
//        exclude "lib/x86_64/libijkffmpeg.so"
        exclude "lib/arm64-v8a/libijksdl.so"
                exclude "lib/arm64-v8a/libijkffmpeg.so"
                exclude "lib/arm64-v8a/libijkplayer.so"
    }
    lintOptions {
        abortOnError false
    }
    sourceSets{

        main{

            jniLibs.srcDirs=['libs']

        }

    }
    buildToolsVersion buildToolsVersion
//    externalNativeBuild {
//        cmake {
//            path file('CMakeLists.txt')
//        }
//    }

}

repositories {
//    google()
//    jcenter()
//    maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/google' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/gradle-plugin' }
    google()
    jcenter()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'androidx.appcompat:appcompat:1.0.0'
//    implementation 'com.android.support:appcompat-v7:23.0.1'
//    implementation 'com.android.support:support-compat:27.1.1'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.1.0'
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.annotation:annotation:1.0.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation('com.squareup.okhttp3:okhttp:4.8.0')
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.ihongqiqu:android-utils:1.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
//    implementation 'com.marshalchen.ultimaterecyclerview:library:0.9.0'
//    implementation 'com.evrencoskun.library:tableview:0.8.8'
    implementation 'com.arthenica:mobile-ffmpeg-full:4.3'
    implementation 'com.shuyu:GSYVideoPlayer:7.1.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "io.reactivex.rxjava3:rxjava:3.0.0-RC7"
//    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
//    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'com.jakewharton.rxbinding4:rxbinding:4.0.0'
//    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha2'
//    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'
    implementation 'com.trello.rxlifecycle4:rxlifecycle:4.0.0'
    implementation 'org.conscrypt:conscrypt-android:2.4.0'
    implementation "com.google.android.gms:play-services-base:16.0.1"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"


    //必选，内部默认使用系统mediaplayer进行解码
//    implementation 'com.github.dueeeke.dkplayer:dkplayer-java:3.1.4'
//    # 可选，使用exoplayer进行解码（推荐）
//    implementation 'com.github.dueeeke.dkplayer:player-exo:3.1.4'

//    # 可选，使用ijkplayer进行解码
//    implementation 'com.github.dueeeke.dkplayer:player-ijk:3.1.4'
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '27.+'
                }
            }
        }
    }
}
